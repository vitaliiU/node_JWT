[10/18/2020, 7:10:30 AM] info: 
    method= GET,
    url= http:///,req.protocol + '://' + req.hostname  + req.app.settings.port + req.path;
    query parameters ={},
    body= {}
   
[10/18/2020, 7:10:31 AM] info: 
    method= GET,
    url= http:///favicon.ico,req.protocol + '://' + req.hostname  + req.app.settings.port + req.path;
    query parameters ={},
    body= {}
   
[10/18/2020, 7:11:28 AM] info: 
    method= GET,
    url= /,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:11:28 AM] info: 
    method= GET,
    url= /favicon.ico,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:15 AM] info: 
    method= GET,
    url= /,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:45 AM] info: 
    method= GET,
    url= /doc,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:45 AM] info: 
    method= GET,
    url= /doc/,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:45 AM] info: 
    method= GET,
    url= /doc/swagger-ui.css,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:45 AM] info: 
    method= GET,
    url= /doc/swagger-ui-bundle.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:46 AM] info: 
    method= GET,
    url= /doc/swagger-ui-standalone-preset.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:46 AM] info: 
    method= GET,
    url= /doc/swagger-ui-init.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:12:46 AM] info: 
    method= GET,
    url= /doc/favicon-16x16.png,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:14:39 AM] info: 
    method= GET,
    url= /users,
    query parameters ={},
    body= {}
   
[10/18/2020, 7:15:08 AM] info: 
    method= POST,
    url= /users,
    query parameters ={},
    body= {"name":"wwwwww","login":"eeeeeeeeeeeee","password":"rrrrrrrrrr"}
   
[10/18/2020, 7:19:11 AM] info: 
    method= GET,
    url= [object Object],
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:22:11 AM] info: 
    method= GET,
    url= class URL {
  constructor(input, base) {
    // toUSVString is not needed.
    input = `${input}`;
    let base_context;
    if (base !== undefined) {
      base_context = new URL(base)[context];
    }
    this[context] = new URLContext();
    parse(input, -1, base_context, undefined, onParseComplete.bind(this),
          onParseError);
  }

  get [special]() {
    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;
  }

  get [cannotBeBase]() {
    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;
  }

  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  get [cannotHaveUsernamePasswordPort]() {
    const { host, scheme } = this[context];
    return ((host == null || host === '') ||
            this[cannotBeBase] ||
            scheme === 'file:');
  }

  [inspect.custom](depth, opts) {
    if (this == null ||
        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {
      throw new ERR_INVALID_THIS('URL');
    }

    if (typeof depth === 'number' && depth < 0)
      return this;

    const ctor = getConstructorOf(this);

    const obj = ObjectCreate({
      constructor: ctor === null ? URL : ctor
    });

    obj.href = this.href;
    obj.origin = this.origin;
    obj.protocol = this.protocol;
    obj.username = this.username;
    obj.password = this.password;
    obj.host = this.host;
    obj.hostname = this.hostname;
    obj.port = this.port;
    obj.pathname = this.pathname;
    obj.search = this.search;
    obj.searchParams = this.searchParams;
    obj.hash = this.hash;

    if (opts.showHidden) {
      obj.cannotBeBase = this[cannotBeBase];
      obj.special = this[special];
      obj[context] = this[context];
    }

    return inspect(obj, opts);
  }
},
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:22:53 AM] info: 
    method= GET,
    url= function urlFormat(urlObject, options) {
  // Ensure it's an object, and not a string url.
  // If it's an object, this is a no-op.
  // this way, you can call urlParse() on strings
  // to clean up potentially wonky urls.
  if (typeof urlObject === 'string') {
    urlObject = urlParse(urlObject);
  } else if (typeof urlObject !== 'object' || urlObject === null) {
    throw new ERR_INVALID_ARG_TYPE('urlObject',
                                   ['Object', 'string'], urlObject);
  } else if (!(urlObject instanceof Url)) {
    const format = urlObject[formatSymbol];
    return format ?
      format.call(urlObject, options) :
      Url.prototype.format.call(urlObject);
  }
  return urlObject.format();
},
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:23:41 AM] info: 
    method= GET,
    url= {},
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:23:58 AM] info: 
    method= GET,
    url= {},
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:24:45 AM] info: 
    method= GET,
    url= undefined,
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:25:18 AM] info: 
    method= GET,
    url= undefined,    
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:25:46 AM] info: 
    method= GET,
    url= undefined,    
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:25:58 AM] info: 
    method= GET,
    url= function fileURLToPath(path) {
  if (typeof path === 'string')
    path = new URL(path);
  else if (!isURLInstance(path))
    throw new ERR_INVALID_ARG_TYPE('path', ['string', 'URL'], path);
  if (path.protocol !== 'file:')
    throw new ERR_INVALID_URL_SCHEME('file');
  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);
},    
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:32:41 AM] info: 
    method= GET,
    url= http://localhost:4000/users/%3Fage=22&name=jim,    
    url= function fileURLToPath(path) {
  if (typeof path === 'string')
    path = new URL(path);
  else if (!isURLInstance(path))
    throw new ERR_INVALID_ARG_TYPE('path', ['string', 'URL'], path);
  if (path.protocol !== 'file:')
    throw new ERR_INVALID_URL_SCHEME('file');
  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);
},    
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:33:25 AM] info: 
    method= GET,
    url= http://localhost:4000/users/%3Fage=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:33:59 AM] info: 
    method= GET,
    url= http://localhost:4000/users/%3Fage=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:34:17 AM] info: 
    method= GET,
    url= http://localhost:4000/users%3Fage=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:35:06 AM] info: 
    method= GET,
    url= http://localhost:4000, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:35:27 AM] info: 
    method= GET,
    url= http://localhost:4000/users%3Fage=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:36:58 AM] info: 
    method= GET,
    url= http://localhost:4000/users?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:39:45 AM] info: 
    method= GET,
    url= localhost:4000//users?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:40:08 AM] info: 
    method= GET,
    url= localhost:4000/users?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:40:36 AM] info: 
    method= GET,
    url= http://localhost:4000/users?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:40:57 AM] info: 
    method= GET,
    url= http://localhost:4000/users/?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:44:53 AM] info: 
    method= GET,
    url= http://localhost:4000/users/?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:45:17 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:17 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:17 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:17 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:17 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:18 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/favicon-16x16.png, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:45:53 AM] info: 
    method= POST,
    url= http://localhost:4000/users, 
    query parameters ={},
    body= {"name":"ffffff","login":"gggggggg","password":"hhhhhhhhhhhhh"}
   
[10/18/2020, 7:46:36 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:36 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:36 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:36 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:36 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:37 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/favicon-16x16.png, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:38 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:46:50 AM] info: 
    method= GET,
    url= http://localhost:4000/users/?age=22&name=jim, 
    query parameters ={"age":"22","name":"jim"},
    body= {}
   
[10/18/2020, 7:50:34 AM] info: 
    method= GET,
    url= http://localhost:4000/users/rrrrrrrrrrrrrrr, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:43 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:44 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:44 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:44 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:44 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js, 
    query parameters ={},
    body= {}
   
[10/18/2020, 7:52:44 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/favicon-16x16.png, 
    query parameters ={},
    body= {}
   
[10/18/2020, 8:00:09 AM] info: 
    method= GET,
    url= http://localhost:4000/users, 
    query parameters ={},
    body= {}
   
[10/18/2020, 8:01:25 AM] info: 
    method= GET,
    url= http://localhost:4000/users, 
    query parameters ={},
    body= {}
   
[10/18/2020, 9:04:37 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:11:00 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:12:42 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:12:42 AM] error: Internal Server Error
[10/18/2020, 9:13:21 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:23:29 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:42:30 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:12 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:12 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui.css,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:12 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-bundle.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:12 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-standalone-preset.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:12 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/swagger-ui-init.js,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:13 AM] info: 
    method= GET,
    url= http://localhost:4000/doc/favicon-16x16.png,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:19 AM] info: 
    method= GET,
    url= http://localhost:4000/error,
    query parameters ={},
    body= {}
   
[10/18/2020, 9:43:19 AM] error: Internal Server Error
[10/18/2020, 10:02:10 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:03:29 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:08:13 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:08:48 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:09:10 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:44:58 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:44:58 AM] error: Internal Server Error
[10/18/2020, 10:46:25 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:46:25 AM] error: Internal Server Error
[10/18/2020, 10:46:54 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 10:46:54 AM] error: Internal Server Error
[10/18/2020, 11:28:28 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:28:28 AM] error: Internal Server Error
[10/18/2020, 11:29:11 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:29:11 AM] error: Internal Server Error
[10/18/2020, 11:29:44 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:29:44 AM] error: Internal Server Error
[10/18/2020, 11:31:04 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:31:04 AM] error: Internal Server Error
[10/18/2020, 11:31:32 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:31:32 AM] error: Internal Server Error
[10/18/2020, 11:32:20 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:32:20 AM] error: Internal Server Error
[10/18/2020, 11:40:06 AM] info: 
    method= GET,
    url= http://localhost:4000/users,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:40:06 AM] error: Internal Server Error
[10/18/2020, 11:41:19 AM] info: 
    method= GET,
    url= http://localhost:4000/users/sdfw4r43,
    query parameters ={},
    body= {}
   
[10/18/2020, 11:41:19 AM] error: Internal Server Error
[10/18/2020, 12:05:48 PM] info: 
      method= GET,
      url= http://localhost:4000/users/sdfw4r43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:22:07 PM] info: 
      method= GET,
      url= http://localhost:4000/users/sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:22:07 PM] error: Internal Server Error
[10/18/2020, 12:28:14 PM] info: 
      method= GET,
      url= http://localhost:4000/users/sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:28:14 PM] error: Internal Server Error
[10/18/2020, 12:31:46 PM] info: 
      method= GET,
      url= http://localhost:4000/users/sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:39:06 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:39:31 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:42:32 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:42:46 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:42:46 PM] error: Internal Server Error
[10/18/2020, 12:43:51 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:43:51 PM] error: Internal Server Error
[10/18/2020, 12:45:33 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:45:33 PM] error: Internal Server Error
[10/18/2020, 12:47:13 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:47:13 PM] error: Internal Server Error
[10/18/2020, 12:53:53 PM] info: 
      method= GET,
      url= http://localhost:4000/users/sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:54:24 PM] info: 
      method= GET,
      url= http://localhost:4000/users/er2453sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:57:57 PM] info: 
      method= GET,
      url= http://localhost:4000/users/er2453sdf43t43,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:57:57 PM] error: Internal Server Error
[10/18/2020, 12:59:52 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 12:59:52 PM] error: Internal Server Error
[10/18/2020, 1:11:26 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] error: Internal Server Error
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/users/a8a59745-a75a-448d-9e45-cdd51b59c0c4,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/a8a59745-a75a-448d-9e45-cdd51b59c0c4,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/f1f0c278-98bf-4169-a223-5396f8ed1735,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= PUT,
      url= http://localhost:4000/users/e23f3161-8887-4824-8cda-a0c91a51d5b6,
      query parameters ={},
      body= {"name":"Autotest updated TEST_USER","login":"test_user","password":"T35t_P@55w0rd","id":"e23f3161-8887-4824-8cda-a0c91a51d5b6"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/users/e23f3161-8887-4824-8cda-a0c91a51d5b6,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/e23f3161-8887-4824-8cda-a0c91a51d5b6,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/75b11b17-b962-4ea6-b0a0-fd737af6b75e,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks,
      query parameters ={},
      body= {"title":"Task #1","order":1,"description":"Lorem ipsum","userId":"446c28d8-e74c-4363-aa24-65080b305fea","boardId":"255308dc-3c1c-4eb0-9c73-44b2f8ec2834"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks,
      query parameters ={},
      body= {"title":"Task #2","order":2,"description":"Lorem ipsum","userId":"446c28d8-e74c-4363-aa24-65080b305fea","boardId":"255308dc-3c1c-4eb0-9c73-44b2f8ec2834"}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/446c28d8-e74c-4363-aa24-65080b305fea,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks/0b5180b8-653c-490d-8d5d-477058357438,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks/b9c5809b-0cc5-4cbb-ae5e-acaa1cc0616f,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks/0b5180b8-653c-490d-8d5d-477058357438,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834/tasks/b9c5809b-0cc5-4cbb-ae5e-acaa1cc0616f,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/255308dc-3c1c-4eb0-9c73-44b2f8ec2834,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/e2b29bd0-b396-473b-a97d-cae05731efcf,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/3ab1e6ef-3c00-43be-a289-55cdfa89e6ad,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/70fb70a9-b322-4445-89e5-4c9b2ee2dc19,
      query parameters ={},
      body= {"id":"70fb70a9-b322-4445-89e5-4c9b2ee2dc19","title":"Autotest updated board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/70fb70a9-b322-4445-89e5-4c9b2ee2dc19,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/70fb70a9-b322-4445-89e5-4c9b2ee2dc19,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/56d07f45-e031-44e6-a436-4fa98b877f2c,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/56d07f45-e031-44e6-a436-4fa98b877f2c,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks,
      query parameters ={},
      body= {"title":"Task #1","order":1,"description":"Lorem ipsum","boardId":"1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d","userId":null,"columnId":null}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks,
      query parameters ={},
      body= {"title":"Task #2","order":2,"description":"Lorem ipsum","boardId":"1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d","userId":null,"columnId":null}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks,
      query parameters ={},
      body= {"title":"Task #3","order":3,"description":"Lorem ipsum","boardId":"1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d","userId":null,"columnId":null}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks,
      query parameters ={},
      body= {"title":"Task #4","order":4,"description":"Lorem ipsum","boardId":"1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d","userId":null,"columnId":null}
     
[10/18/2020, 1:11:27 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks,
      query parameters ={},
      body= {"title":"Task #5","order":5,"description":"Lorem ipsum","boardId":"1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d","userId":null,"columnId":null}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/4de469ae-4192-4340-8160-1e4c4984d343,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/09b9d189-612a-4233-9ac0-146ce5f4b8db,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/5b5d6fad-4447-439e-95d2-bbf376c705d8,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/80942b28-e9c8-405d-970a-46f0867e44f9,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/a8b2d260-d6b7-4501-ae5e-a1ab9f8886e5,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/4de469ae-4192-4340-8160-1e4c4984d343,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/09b9d189-612a-4233-9ac0-146ce5f4b8db,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/5b5d6fad-4447-439e-95d2-bbf376c705d8,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/80942b28-e9c8-405d-970a-46f0867e44f9,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/1dd4f2f3-863d-4569-ab9d-cfd30e2fd20d/tasks/a8b2d260-d6b7-4501-ae5e-a1ab9f8886e5,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:27 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/d6bc1547-9f2a-46ec-8d86-1561f11a94af,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 1:11:28 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/6bcae15e-2e37-4eb9-8fb1-8c01ad39073d,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 1:11:28 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/4f39d998-5694-40ea-9a6a-e9a96373ce1e,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 1:11:28 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/3f8b1667-f2ff-4e93-9e82-90bfd41f7039,
      query parameters ={},
      body= {"id":"3f8b1667-f2ff-4e93-9e82-90bfd41f7039","title":"Autotest updated task","order":0,"description":"Lorem ipsum","userId":null,"boardId":"4d5d2930-50d3-4205-85dd-bce004df3cbd","columnId":null}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/3f8b1667-f2ff-4e93-9e82-90bfd41f7039,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/6bcae15e-2e37-4eb9-8fb1-8c01ad39073d,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/6bcae15e-2e37-4eb9-8fb1-8c01ad39073d,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd/tasks/6bcae15e-2e37-4eb9-8fb1-8c01ad39073d,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:11:28 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/4d5d2930-50d3-4205-85dd-bce004df3cbd,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:20 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:20 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui.css,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:20 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-bundle.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:20 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-standalone-preset.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:20 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-init.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:39:21 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/favicon-16x16.png,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:55:17 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:55:17 PM] error: Internal Server Error
[10/18/2020, 1:56:53 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:56:53 PM] error: Internal Server Error
[10/18/2020, 1:58:33 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:58:33 PM] error: Internal Server Error
[10/18/2020, 1:59:52 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 1:59:53 PM] error: Internal Server Error
[10/18/2020, 2:29:34 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:29:34 PM] error: Internal Server Error
[10/18/2020, 2:30:01 PM] info: 
      method= GET,
      url= http://localhost:4000/users/%D0%B0%D1%8343%D0%B543,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:01 PM] error: Internal Server Error
[10/18/2020, 2:30:09 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:10 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui.css,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:10 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-bundle.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:10 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-standalone-preset.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:10 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-init.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:46 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:30:46 PM] error: Internal Server Error
[10/18/2020, 2:31:29 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:31:29 PM] error: Internal Server Error
[10/18/2020, 2:31:55 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:31:55 PM] error: Internal Server Error
[10/18/2020, 2:33:22 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:33:22 PM] error: Internal Server Error
[10/18/2020, 2:38:14 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:38:14 PM] error: Internal Server Error
[10/18/2020, 2:48:49 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:48:49 PM] error: The user with id: dfr33we32 was not found
[10/18/2020, 2:48:49 PM] error: 404
[10/18/2020, 2:50:28 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:50:28 PM] error: Code 404
[10/18/2020, 2:50:28 PM] error: The user with id: dfr33we32 was not found
[10/18/2020, 2:51:14 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:51:14 PM] error: StatusCode 404
[10/18/2020, 2:51:14 PM] error: The user with id: dfr33we32 was not found
[10/18/2020, 2:51:34 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:51:34 PM] error: StatusCode: 404
[10/18/2020, 2:51:34 PM] error: The user with id: dfr33we32 was not found
[10/18/2020, 2:52:07 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:52:07 PM] error: StatusCode - 404
[10/18/2020, 2:52:07 PM] error: The user with id: dfr33we32 was not found
[10/18/2020, 2:52:49 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:52:49 PM] error: StatusCode 404. The user with id: dfr33we32 was not found
[10/18/2020, 2:57:57 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:57:57 PM] error: StatusCode 404. The user with id: dfr33we32 was not found
[10/18/2020, 2:58:39 PM] info: 
      method= GET,
      url= http://localhost:4000/users/dfr33we32,
      query parameters ={},
      body= {}
     
[10/18/2020, 2:58:39 PM] error: StatusCode 404. The user with id: dfr33we32 was not found
[10/18/2020, 3:57:27 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:27 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui.css,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:27 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-bundle.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:27 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-standalone-preset.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:27 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/swagger-ui-init.js,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:28 PM] info: 
      method= GET,
      url= http://localhost:4000/doc/favicon-16x16.png,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:57:37 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:58:01 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 3:58:32 PM] info: 
      method= PUT,
      url= http://localhost:4000/users/248e9cdf-8c89-4431-bd0b-365aed687580,
      query parameters ={},
      body= {"name":"rrrrrr","login":"ffffff","password":"vvvvvvvv"}
     
[10/18/2020, 3:58:48 PM] info: 
      method= PUT,
      url= http://localhost:4000/users/248e9cdf-ff8c89-4431-bd0b-365aed687580,
      query parameters ={},
      body= {"name":"rrrrrr","login":"ffffff","password":"vvvvvvvv"}
     
[10/18/2020, 3:58:48 PM] error: Client Error. StatusCode 404. The user with id: 248e9cdf-ff8c89-4431-bd0b-365aed687580 was not found
[10/18/2020, 4:00:11 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/248e9cdf-8c89-44654431-bd0b-365aed687580,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:00:11 PM] error: Client Error. StatusCode 404. The user with id: 248e9cdf-8c89-44654431-bd0b-365aed687580 was not found
[10/18/2020, 4:01:23 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/248e9cdf-8c89-4431-bd0b-365aed687580,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:04:13 PM] info: 
      method= GET,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:04:42 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/4576c205-15d0-47a0-afff-0d44ea7b5f38,
      query parameters ={},
      body= {"title":"dddddd","columns":[{"id":"ffffffff","title":"ggggggggg","order":4444}]}
     
[10/18/2020, 4:05:10 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/4576c205-3315d0-47a0-afff-0d44ea7b5f38,
      query parameters ={},
      body= {"title":"dddddd","columns":[{"id":"ffffffff","title":"ggggggggg","order":4444}]}
     
[10/18/2020, 4:05:10 PM] error: Client Error. StatusCode 404. The board with id: 4576c205-3315d0-47a0-afff-0d44ea7b5f38 was not found
[10/18/2020, 4:12:40 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/4576c205-15d435340-47a0-afff-0d44ea7b5f38,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:12:40 PM] error: Client Error. StatusCode 404. The board with id: 4576c205-15d435340-47a0-afff-0d44ea7b5f38 was not found
[10/18/2020, 4:13:01 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/4576c205-15d0-47a0-afff-0d44ea7b5f38,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= GET,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 4:16:32 PM] info: 
      method= GET,
      url= http://localhost:4000/users/0173e955-4acd-4283-b4e8-263166f4f94d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/0173e955-4acd-4283-b4e8-263166f4f94d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 4:16:32 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/a752de54-bfed-480a-bc66-bbc13e07d6b1,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 4:16:32 PM] info: 
      method= PUT,
      url= http://localhost:4000/users/145ddf24-81d4-4e6c-a12f-42124dcee300,
      query parameters ={},
      body= {"name":"Autotest updated TEST_USER","login":"test_user","password":"T35t_P@55w0rd","id":"145ddf24-81d4-4e6c-a12f-42124dcee300"}
     
[10/18/2020, 4:16:32 PM] info: 
      method= GET,
      url= http://localhost:4000/users/145ddf24-81d4-4e6c-a12f-42124dcee300,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/145ddf24-81d4-4e6c-a12f-42124dcee300,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 4:16:32 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/1ccb16bd-c062-435c-80f3-5612f2231372,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:32 PM] info: 
      method= POST,
      url= http://localhost:4000/users,
      query parameters ={},
      body= {"name":"TEST_USER","login":"test_user","password":"T35t_P@55w0rd"}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks,
      query parameters ={},
      body= {"title":"Task #1","order":1,"description":"Lorem ipsum","userId":"9672dc48-1f4a-4723-8c6c-2ddcea6bd5b1","boardId":"3ad59c59-d243-4f46-b22d-69e24a109378"}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks,
      query parameters ={},
      body= {"title":"Task #2","order":2,"description":"Lorem ipsum","userId":"9672dc48-1f4a-4723-8c6c-2ddcea6bd5b1","boardId":"3ad59c59-d243-4f46-b22d-69e24a109378"}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/users/9672dc48-1f4a-4723-8c6c-2ddcea6bd5b1,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks/8204607e-61ec-4be5-9a21-cd5a3d1cd082,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks/cf296081-fc49-4f1a-aa67-e02564f8e6d1,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks/8204607e-61ec-4be5-9a21-cd5a3d1cd082,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378/tasks/cf296081-fc49-4f1a-aa67-e02564f8e6d1,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/3ad59c59-d243-4f46-b22d-69e24a109378,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/536f2168-f858-4ee2-92fb-2f9555fc175f,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/0d47097f-c658-4c6f-b0a6-527b7dd02a4b,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/d991eaab-dbd4-4a2b-bb5e-009a8b518d4d,
      query parameters ={},
      body= {"id":"d991eaab-dbd4-4a2b-bb5e-009a8b518d4d","title":"Autotest updated board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/d991eaab-dbd4-4a2b-bb5e-009a8b518d4d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/d991eaab-dbd4-4a2b-bb5e-009a8b518d4d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/f5c3ace9-5949-4ad5-9e77-015062584377,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/f5c3ace9-5949-4ad5-9e77-015062584377,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The board with id: f5c3ace9-5949-4ad5-9e77-015062584377 was not found
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks,
      query parameters ={},
      body= {"title":"Task #1","order":1,"description":"Lorem ipsum","boardId":"af76430f-a1b7-44df-84b6-36ef841df75a","userId":null,"columnId":null}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks,
      query parameters ={},
      body= {"title":"Task #2","order":2,"description":"Lorem ipsum","boardId":"af76430f-a1b7-44df-84b6-36ef841df75a","userId":null,"columnId":null}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks,
      query parameters ={},
      body= {"title":"Task #3","order":3,"description":"Lorem ipsum","boardId":"af76430f-a1b7-44df-84b6-36ef841df75a","userId":null,"columnId":null}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks,
      query parameters ={},
      body= {"title":"Task #4","order":4,"description":"Lorem ipsum","boardId":"af76430f-a1b7-44df-84b6-36ef841df75a","userId":null,"columnId":null}
     
[10/18/2020, 4:16:33 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks,
      query parameters ={},
      body= {"title":"Task #5","order":5,"description":"Lorem ipsum","boardId":"af76430f-a1b7-44df-84b6-36ef841df75a","userId":null,"columnId":null}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/8033559c-4907-4b9d-9c02-66b782688788,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/0804121c-951b-4e61-b284-5b9c53b4efef,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/d5dce17a-b376-496a-b635-c43c05a9297d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/ecda246e-ad2d-4960-a475-c45f83e3758b,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/6cf9f9cb-5bf4-400b-85b2-3aca0c3bf841,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/8033559c-4907-4b9d-9c02-66b782688788,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/0804121c-951b-4e61-b284-5b9c53b4efef,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/d5dce17a-b376-496a-b635-c43c05a9297d,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/ecda246e-ad2d-4960-a475-c45f83e3758b,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/af76430f-a1b7-44df-84b6-36ef841df75a/tasks/6cf9f9cb-5bf4-400b-85b2-3aca0c3bf841,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The tasks with boardId: af76430f-a1b7-44df-84b6-36ef841df75a was not found
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The tasks with boardId: af76430f-a1b7-44df-84b6-36ef841df75a was not found
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The tasks with boardId: af76430f-a1b7-44df-84b6-36ef841df75a was not found
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The tasks with boardId: af76430f-a1b7-44df-84b6-36ef841df75a was not found
[10/18/2020, 4:16:33 PM] error: Client Error. StatusCode 404. The tasks with boardId: af76430f-a1b7-44df-84b6-36ef841df75a was not found
[10/18/2020, 4:16:33 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/f7af8ac8-c70d-42de-a7fa-6f42b7afe116,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= POST,
      url= http://localhost:4000/boards,
      query parameters ={},
      body= {"title":"Autotest board","columns":[{"title":"Backlog","order":1},{"title":"Sprint","order":2}]}
     
[10/18/2020, 4:16:34 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/498dbe89-0134-4034-bfaf-6a3c675e19d5,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 4:16:34 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/b619345a-9318-4443-ac99-fdec61aff6c2,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= POST,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks,
      query parameters ={},
      body= {"title":"Autotest task","order":0,"description":"Lorem ipsum","userId":null,"boardId":null,"columnId":null}
     
[10/18/2020, 4:16:34 PM] info: 
      method= PUT,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/e563d24b-81d4-4870-b159-e6fbcd3a9100,
      query parameters ={},
      body= {"id":"e563d24b-81d4-4870-b159-e6fbcd3a9100","title":"Autotest updated task","order":0,"description":"Lorem ipsum","userId":null,"boardId":"721e448b-c9fb-4113-a272-f7d254f88b1a","columnId":null}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/e563d24b-81d4-4870-b159-e6fbcd3a9100,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/498dbe89-0134-4034-bfaf-6a3c675e19d5,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/498dbe89-0134-4034-bfaf-6a3c675e19d5,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a/tasks/498dbe89-0134-4034-bfaf-6a3c675e19d5,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:16:34 PM] error: Client Error. StatusCode 404. The tasks with taskId: 498dbe89-0134-4034-bfaf-6a3c675e19d5 was not found
[10/18/2020, 4:16:34 PM] info: 
      method= DELETE,
      url= http://localhost:4000/boards/721e448b-c9fb-4113-a272-f7d254f88b1a,
      query parameters ={},
      body= {}
     
[10/18/2020, 4:18:20 PM] info: 
      method= GET,
      url= http://localhost:4000/boards/444/tasks,
      query parameters ={},
      body= {}
     
